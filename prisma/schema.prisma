// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String
  age            Int
  email          String
  role           Role            @default(BASIC)
  // posts   Post[]
  writtenPosts   Post[]          @relation("WrittenPosts")
  favouritePosts Post[]          @relation("FavouritePosts")
  UserPreference UserPreference?

  @@unique([age, name])
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  // one to one relation must have unique attribute
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favouriteBy   User?      @relation("FavouritePosts", fields: [favouriteById], references: [id])
  favouriteById String?
  categories    Category[]

  // combination identities with title and user id, insteed of uuid
  // @@id([title, authorId])
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  // prisma creates a joint table automatically
  // many to many relation is haddled by prisma
  posts Post[]
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}
